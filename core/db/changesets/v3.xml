<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd">

    <changeSet id="110923-1" author="kspar">
        <createIndex tableName="submission" indexName="submissions_by_student_on_exercise">
            <column name="course_exercise_id"/>
            <column name="student_id"/>
        </createIndex>
    </changeSet>

    <changeSet id="230124-1" author="kspar">
        <addColumn tableName="exercise_version">
            <column name="solution_file_name" type="text" defaultValue="lahendus.py">
                <constraints nullable="false"/>
            </column>
            <column name="solution_file_type" type="integer" defaultValueNumeric="0">
                <constraints nullable="false"/>
            </column>
        </addColumn>
        <dropDefaultValue tableName="exercise_version" columnName="solution_file_name"/>
        <dropDefaultValue tableName="exercise_version" columnName="solution_file_type"/>
    </changeSet>

    <changeSet id="271123-1" author="priit">
        <addColumn tableName="submission">
            <column name="seen" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
        </addColumn>
    </changeSet>

    <changeSet id="301123-1" author="priit">
        <addColumn tableName="account">
            <column name="is_teacher" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
            <column name="is_admin" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
            <column name="is_student" type="boolean" defaultValue="false">
                <constraints nullable="false"/>
            </column>
        </addColumn>

        <sql>
            UPDATE account SET is_admin = true WHERE username IN (SELECT username FROM admin);
            UPDATE account SET is_teacher = true WHERE username IN (SELECT username FROM teacher);
            UPDATE account SET is_student = true WHERE username IN (SELECT username FROM student);
        </sql>

        <dropForeignKeyConstraint baseTableName="admin" constraintName="fk_admin_account"/>
        <dropForeignKeyConstraint baseTableName="student" constraintName="fk_student_account"/>
        <dropForeignKeyConstraint baseTableName="teacher" constraintName="fk_teacher_account"/>

        <dropForeignKeyConstraint baseTableName="article" constraintName="fk_article_admin"/>
        <addForeignKeyConstraint baseTableName="article" baseColumnNames="owner_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_article_admin" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="article_version" constraintName="fk_article_version_admin"/>
        <addForeignKeyConstraint baseTableName="article_version" baseColumnNames="author_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_article_version_admin" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="article_alias" constraintName="fk_article_alias_admin"/>
        <addForeignKeyConstraint baseTableName="article_alias" baseColumnNames="created_by_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_article_alias_admin" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="student_course_access" constraintName="fk_student_course_access_student"/>
        <addForeignKeyConstraint baseTableName="student_course_access" baseColumnNames="student_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_student_course_access_student" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="submission" constraintName="fk_submission_student"/>
        <addForeignKeyConstraint baseTableName="submission" baseColumnNames="student_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_submission_student" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="submission_draft" constraintName="fk_submission_draft_student"/>
        <addForeignKeyConstraint baseTableName="submission_draft" baseColumnNames="student_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_submission_draft_student" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="exercise" constraintName="fk_exercise_teacher"/>
        <addForeignKeyConstraint baseTableName="exercise" baseColumnNames="owned_by_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_exercise_teacher" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="exercise_version" constraintName="fk_exercise_version_teacher"/>
        <addForeignKeyConstraint baseTableName="exercise_version" baseColumnNames="author_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_exercise_version_teacher" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="stored_file" constraintName="fk_stored_file_teacher"/>
        <addForeignKeyConstraint baseTableName="stored_file" baseColumnNames="created_by_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_stored_file_teacher" onUpdate="CASCADE"/>

        <dropForeignKeyConstraint baseTableName="teacher_submission" constraintName="fk_teacher_submission_teacher"/>
        <addForeignKeyConstraint baseTableName="teacher_submission" baseColumnNames="teacher_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_teacher_submission_teacher" onUpdate="CASCADE"/>


        <dropForeignKeyConstraint baseTableName="teacher_course_access" constraintName="fk_teacher_course_access_teacher"/>
        <addForeignKeyConstraint baseTableName="teacher_course_access" baseColumnNames="teacher_id"
                                 referencedTableName="account" referencedColumnNames="username"
                                 constraintName="fk_teacher_course_access_teacher" onUpdate="CASCADE"/>

        <dropTable tableName="admin"/>
        <dropTable tableName="student"/>
        <dropTable tableName="teacher"/>

    </changeSet>

    <changeSet id="290124-1" author="priit">
        <addColumn tableName="submission">
            <column name="number" type="integer" defaultValue="1">
                <constraints nullable="false"/>
            </column>
        </addColumn>

        <sql>
        <![CDATA[
            UPDATE submission s
            SET number = (SELECT MAX(sub_number)
                          FROM (SELECT ROW_NUMBER() OVER (PARTITION BY course_exercise_id, student_id ORDER BY created_at ASC) as sub_number
                                FROM submission sub
                                WHERE sub.course_exercise_id = s.course_exercise_id
                                  AND sub.student_id = s.student_id
                                  AND sub.id <= s.id) AS subquery);
            ]]>
    </sql>
    </changeSet>

    <changeSet id="160224-1" author="priit">
        <update tableName="submission">
            <column name="grade" valueComputed="(SELECT COALESCE(
                                                    (SELECT ta.grade FROM teacher_assessment ta
                                                     WHERE ta.submission_id = submission.id
                                                       AND ta.grade IS NOT NULL
                                                     ORDER BY ta.edited_at DESC LIMIT 1),
                                                    (SELECT aa.grade FROM automatic_assessment aa
                                                     WHERE aa.submission_id = submission.id
                                                       AND aa.grade IS NOT NULL
                                                     ORDER BY aa.created_at DESC LIMIT 1)
                                                 ))"/>
            <column name="is_auto_grade" valueComputed="(SELECT COUNT(ta.grade) FROM teacher_assessment ta
                                                        WHERE ta.submission_id = submission.id
                                                          AND ta.grade IS NOT NULL) = 0"/>
        </update>
    </changeSet>

    <changeSet id="190224-1" author="priit">
        <addColumn tableName="submission">
            <column name="is_graded_directly" type="boolean">
                <constraints nullable="true"/>
            </column>
        </addColumn>

        <update tableName="submission">
            <column name="is_graded_directly"
                    valueComputed="(CASE WHEN submission.grade IS NOT NULL THEN TRUE ELSE NULL END)"/>
        </update>
    </changeSet>

</databaseChangeLog>