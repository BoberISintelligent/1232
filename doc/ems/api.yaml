swagger: "2.0"
info:
  description: This specification documents the public API of easy:ems. Note that details about authentication/authorization are documented in a separate authentication document.
  version: "1.0"
  title: Easy:ems Public API
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
basePath: /v1

tags:
  - name: placeholder


paths:

  /student/courses:
    get:
      summary: Get summaries of courses the authenticated student has access to.
      responses:
        200:
          description: Course summaries.
          schema:
            type: array
            items:
              $ref: '#/definitions/StudentCourse'

  /student/courses/{courseId}/exercises:
    get:
      summary: Get summaries of exercises in the specified course (that the authenticated user has access to).
      parameters:
        - $ref: '#/parameters/CourseId'
      responses:
        200:
          description: Exercise summaries.
          schema:
            type: array
            items:
              $ref: '#/definitions/StudentExercise'

  /student/courses/{courseId}/exercises/{courseExerciseId}:
    get:
      summary: Get the specified course exercise details.
      parameters:
        - $ref: '#/parameters/CourseId'
        - $ref: '#/parameters/CourseExerciseId'
      responses:
        200:
          description: Exercise details.
          schema:
            $ref: '#/definitions/StudentExerciseDetails'

  /student/courses/{courseId}/exercises/{courseExerciseId}/submissions/latest:
    get:
      summary: Get the latest submission's details to the specified course exercise.
      parameters:
        - $ref: '#/parameters/CourseId'
        - $ref: '#/parameters/CourseExerciseId'
      responses:
        200:
          description: Latest submission to this exercise.
          schema:
            $ref: '#/definitions/Submission'

  /student/courses/{courseId}/exercises/{courseExerciseId}/submissions:
    get:
      summary: Get all submissions to the specified course exercise.
      parameters:
        - $ref: '#/parameters/CourseId'
        - $ref: '#/parameters/CourseExerciseId'
      responses:
        200:
          description: All submissions to this exercise.
          schema:
            type: array
            items:
              $ref: '#/definitions/Submission'

    post:
      summary: Add a new submission to the specified course exercise.
      parameters:
        - $ref: '#/parameters/CourseId'
        - $ref: '#/parameters/CourseExerciseId'
        - name: submission
          in: body
          schema:
            properties:
              solution:
                type: string
      responses:
        201:
          description: Submission added.
          headers:
            Location:
              type: string
              description: URL for getting this submission's details.



parameters:

  CourseId:
    name: courseId
    in: path
    required: true
    type: string

  CourseExerciseId:
    name: courseExerciseId
    in: path
    required: true
    type: string


definitions:

  StudentCourse:
    properties:
      id:
        type: string
      title:
        type: string
      next_deadline:
        type: string
        format: date-time
      progress:
        description: TODO
        type: integer

  StudentExercise:
    properties:
      id:
        type: string
      title:
        type: string
      deadline:
        type: string
        format: date-time
      status:
        $ref: '#/definitions/ExerciseStatus'
      grade:
        description: TODO
        type: integer

  StudentExerciseDetails:
    properties:
      title:
        type: string
      text_html:
        type: string
      deadline:
        type: string
        format: date-time
      grader_type:
        $ref: '#/definitions/GraderType'
      threshold:
        type: integer

  Submission:
    properties:
      serial:
        type: integer
      solution:
        type: string
      grade:
        type: integer
      feedback:
        type: string
      time:
        type: string
        format: date-time



  # Enums
  ExerciseStatus:
    type: string
    description: Student-specific status of a course exercise. The student either has not made any submissions to it (UNSTARTED), has made submissions but the last submission did not meet the threshold (STARTED) or the last submission did meet the threshold (COMPLETED).
    enum:
      - UNSTARTED
      - STARTED
      - COMPLETED

  GraderType:
    type: string
    description: Type of grading used for an exercise. The exercise is either graded automatically (AUTO) or manually by a teacher (TEACHER). Note that automatically graded exercises can have teacher assessments as well.
    enum:
      - AUTO
      - TEACHER
